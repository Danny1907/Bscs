{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "9f3aa9b8-5476-46da-937f-2fbb82d1e154",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sb"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "bc7a4b5f-6e29-418d-9d69-3514236aa6d4",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv(\"all_recs.csv\", encoding= 'unicode_escape' )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "8c2008ac-d5d4-44f8-9c9b-941c07ed3bed",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Location</th>\n",
       "      <th>Victim</th>\n",
       "      <th>Industry</th>\n",
       "      <th>Actor Location</th>\n",
       "      <th>Actor</th>\n",
       "      <th>Motive</th>\n",
       "      <th>Type</th>\n",
       "      <th>Sub-Type</th>\n",
       "      <th>Year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>31/12/2022</td>\n",
       "      <td>Iran (Islamic Republic of)</td>\n",
       "      <td>State-run Iranian Websites</td>\n",
       "      <td>Public Administration</td>\n",
       "      <td>Undetermined</td>\n",
       "      <td>Undetermined</td>\n",
       "      <td>Protest</td>\n",
       "      <td>Disruptive</td>\n",
       "      <td>External Denial of Services</td>\n",
       "      <td>2022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>31/12/2022</td>\n",
       "      <td>United States of America</td>\n",
       "      <td>Housing Authority of the City of Los Angeles (...</td>\n",
       "      <td>Public Administration</td>\n",
       "      <td>Undetermined</td>\n",
       "      <td>LockBit 3.0</td>\n",
       "      <td>Financial</td>\n",
       "      <td>Exploitative</td>\n",
       "      <td>Undetermined</td>\n",
       "      <td>2022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>30/12/2022</td>\n",
       "      <td>Poland</td>\n",
       "      <td>Polish Parliament</td>\n",
       "      <td>Public Administration</td>\n",
       "      <td>Russian Federation</td>\n",
       "      <td>NoName057(16)</td>\n",
       "      <td>Protest</td>\n",
       "      <td>Disruptive</td>\n",
       "      <td>External Denial of Services</td>\n",
       "      <td>2022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>30/12/2022</td>\n",
       "      <td>United States of America</td>\n",
       "      <td>CentraState Healthcare System</td>\n",
       "      <td>Health Care and Social Assistance</td>\n",
       "      <td>Undetermined</td>\n",
       "      <td>Undetermined</td>\n",
       "      <td>Undetermined</td>\n",
       "      <td>Disruptive</td>\n",
       "      <td>Undetermined</td>\n",
       "      <td>2022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>30/12/2022</td>\n",
       "      <td>Iran (Islamic Republic of)</td>\n",
       "      <td>Iran Airlines</td>\n",
       "      <td>Transportation and Warehousing</td>\n",
       "      <td>Ukraine</td>\n",
       "      <td>rootkitsecurity</td>\n",
       "      <td>Protest</td>\n",
       "      <td>Disruptive</td>\n",
       "      <td>External Denial of Services</td>\n",
       "      <td>2022</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Date                     Location  \\\n",
       "0  31/12/2022  Iran (Islamic Republic of)   \n",
       "1  31/12/2022    United States of America   \n",
       "2  30/12/2022                      Poland   \n",
       "3  30/12/2022    United States of America   \n",
       "4  30/12/2022  Iran (Islamic Republic of)   \n",
       "\n",
       "                                              Victim  \\\n",
       "0                         State-run Iranian Websites   \n",
       "1  Housing Authority of the City of Los Angeles (...   \n",
       "2                                  Polish Parliament   \n",
       "3                      CentraState Healthcare System   \n",
       "4                                      Iran Airlines   \n",
       "\n",
       "                            Industry      Actor Location            Actor  \\\n",
       "0              Public Administration        Undetermined     Undetermined   \n",
       "1              Public Administration        Undetermined      LockBit 3.0   \n",
       "2              Public Administration  Russian Federation    NoName057(16)   \n",
       "3  Health Care and Social Assistance        Undetermined     Undetermined   \n",
       "4     Transportation and Warehousing             Ukraine  rootkitsecurity   \n",
       "\n",
       "         Motive          Type                     Sub-Type  Year  \n",
       "0       Protest    Disruptive  External Denial of Services  2022  \n",
       "1     Financial  Exploitative                 Undetermined  2022  \n",
       "2       Protest    Disruptive  External Denial of Services  2022  \n",
       "3  Undetermined    Disruptive                 Undetermined  2022  \n",
       "4       Protest    Disruptive  External Denial of Services  2022  "
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df .head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "b9524a80-436a-4563-aa66-3771baa78cba",
   "metadata": {},
   "outputs": [],
   "source": [
    "year_order = df['Year'].value_counts().index\n",
    "location_order = df['Location'].value_counts().index\n",
    "motive_order = df['Motive' ].value_counts().index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "75c172c6-503c-43da-b0f6-40c59e666fc3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Location</th>\n",
       "      <th>Victim</th>\n",
       "      <th>Industry</th>\n",
       "      <th>Actor Location</th>\n",
       "      <th>Actor</th>\n",
       "      <th>Motive</th>\n",
       "      <th>Type</th>\n",
       "      <th>Sub-Type</th>\n",
       "      <th>Year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>10419</td>\n",
       "      <td>10419</td>\n",
       "      <td>10419</td>\n",
       "      <td>10419</td>\n",
       "      <td>10416</td>\n",
       "      <td>10419</td>\n",
       "      <td>10419</td>\n",
       "      <td>10419</td>\n",
       "      <td>10415</td>\n",
       "      <td>10420</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>2767</td>\n",
       "      <td>155</td>\n",
       "      <td>9519</td>\n",
       "      <td>21</td>\n",
       "      <td>76</td>\n",
       "      <td>956</td>\n",
       "      <td>10</td>\n",
       "      <td>5</td>\n",
       "      <td>77</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>27/06/2017</td>\n",
       "      <td>United States of America</td>\n",
       "      <td>Undetermined</td>\n",
       "      <td>Public Administration</td>\n",
       "      <td>Undetermined</td>\n",
       "      <td>Undetermined</td>\n",
       "      <td>Financial</td>\n",
       "      <td>Exploitive</td>\n",
       "      <td>Exploitation of Application Server</td>\n",
       "      <td>2022</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>78</td>\n",
       "      <td>5110</td>\n",
       "      <td>14</td>\n",
       "      <td>2021</td>\n",
       "      <td>8269</td>\n",
       "      <td>6472</td>\n",
       "      <td>5781</td>\n",
       "      <td>5397</td>\n",
       "      <td>3616</td>\n",
       "      <td>1918</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Date                   Location        Victim  \\\n",
       "count        10419                     10419         10419   \n",
       "unique        2767                       155          9519   \n",
       "top     27/06/2017  United States of America  Undetermined   \n",
       "freq            78                      5110            14   \n",
       "\n",
       "                     Industry Actor Location         Actor     Motive  \\\n",
       "count                   10419          10416         10419      10419   \n",
       "unique                     21             76           956         10   \n",
       "top     Public Administration   Undetermined  Undetermined  Financial   \n",
       "freq                     2021           8269          6472       5781   \n",
       "\n",
       "              Type                            Sub-Type   Year  \n",
       "count        10419                               10415  10420  \n",
       "unique           5                                  77     11  \n",
       "top     Exploitive  Exploitation of Application Server   2022  \n",
       "freq          5397                                3616   1918  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "90654be2-98f9-4d94-903e-733d9b4a2b65",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 10420 entries, 0 to 10419\n",
      "Data columns (total 10 columns):\n",
      " #   Column          Non-Null Count  Dtype \n",
      "---  ------          --------------  ----- \n",
      " 0   Date            10419 non-null  object\n",
      " 1   Location        10419 non-null  object\n",
      " 2   Victim          10419 non-null  object\n",
      " 3   Industry        10419 non-null  object\n",
      " 4   Actor Location  10416 non-null  object\n",
      " 5   Actor           10419 non-null  object\n",
      " 6   Motive          10419 non-null  object\n",
      " 7   Type            10419 non-null  object\n",
      " 8   Sub-Type        10415 non-null  object\n",
      " 9   Year            10420 non-null  object\n",
      "dtypes: object(10)\n",
      "memory usage: 814.2+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "908e510b-b469-4246-b97f-e28113dff89f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAASUAAALSCAYAAACbGMdLAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjMsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvZiW1igAAAAlwSFlzAAAPYQAAD2EBqD+naQAASTNJREFUeJzt3QtcFWX+P/AvIBCKoCAXbyhmhmapsRQuSagEmbaauHmplBUrN8VAXVvK7WZGeflb5q3StLbUxJUMKo3QYEvMolARxSwUCiGsACFuyvxf3+/+5rzOAVRQkQfm8369xuOZmTOXw8znPPM8z5ljpWmaRgAAirBu6Q0AADCHUAIApSCUAEApCCUAUApCCQCUglACAKUglABAKQglAFAKQgkAlIJQaoNOnjxJVlZWtGzZspbeFLgI/J0ahlC6DGvWrJGD6fbbb29welZWFj377LNy0DX02k2bNpHKeN8aGjw9PVt606CJRo0aRZ07d6bCwsJ600pKSqhr165yHNfW1pIq2rX0BrRG7733HvXu3ZsOHDhAJ06coL59+9YLpeeee46CgoJkvrqh1KVLFwoPDyeV3XXXXTR16lSLcQ4ODi22PXB5+HgbOHAgRUdH0+bNmy2mPfnkk3TmzBnatWsXWVurUz5BKDVRTk4O7du3j3bs2EGPPvqoBNQzzzxDbU2/fv3owQcfbNS8/J3uyspKhJaCvL295fh84okn5IMwJCRExn/99de0bt06mj9/Pg0aNKjZt4OPDzs7u8aFH98lABpv0aJFWufOnbWqqirt73//u3bDDTdYTN+4cSPfdaHesHfvXq1Xr171xt95553yul9//VWbN2+eNnDgQK1Dhw5ax44dtbvvvlvLyMiotw0VFRXaM888I+u2t7fXPD09tfvuu087ceKETM/JyZFlL1261PSa2tpa7eGHH9ZsbW21//znPxfdR37trFmzLjid92P06NHarl27NF9fX9mGFStWyLTff/9de/zxx7UePXpodnZ22vXXX6+99NJL2vnz5y2WwfNNmzZNc3Jy0pydnbWpU6dq3333nayb30Mdvz/6e2SOX8vbYY7XwdsxYMAA2SZ3d3ftkUce0X777bcGt/+///2v5ufnJ/N6e3trb7/9dr318HZGRUXJa3h/unfvrj300ENaUVGRdvbsWa19+/banDlz6r0uLy9Ps7a21l58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
